---
- hosts: local
  connection: local
  gather_facts: false
  vars_files:
    - parameters.yaml
  tasks:
  - name: Provision the AWS CloudFormation.
    cloudformation: stack_name="a1jz2asd91df"
                    state="present"
                    region="{{ region }}"
                    disable_rollback="yes"
                    template="cloud-formation.json"
    args:
      template_parameters:
        KeyName: "{{ keypair }}"
        PortMin: "{{ port_range_min }}"
        PortMax: "{{ port_range_max }}"

    register: stack

  - name: Add the provisioned instance to temporary inventory.
    add_host: name={{ stack.stack_outputs['PublicIP'] }}
              groups="tmp"
              ansible_ssh_user="ec2-user"

- hosts: tmp
  gather_facts: false
  sudo: yes
  vars_files:
    - parameters.yaml
  handlers:
    - name: restart docker
      service: name=docker state=restarted
  tasks:
  - name: Ensure Docker, Git and Ruby are installed.
    yum: state=installed name=docker,git,ruby

  - name: Ensure the Git repo exists.
    unarchive: src=blank-repo.tar dest=/home/ec2-user

  - name: Ensure the post-receive hook is in place.
    template: src=./post-receive.j2 dest=/home/ec2-user/repo.git/hooks/post-receive

  - name: Chown the repo
    file: state=directory recurse=yes owner=ec2-user group=ec2-user name=/home/ec2-user/repo.git

  - name: Chmod +x the deploy script
    file: mode=0774 name=/home/ec2-user/repo.git/hooks/post-receive

  - name: Enable the Docker daemon.
    service: name=docker enabled=yes
    notify: restart docker

  - name: Add the ec2-user to the docker group
    user: name=ec2-user groups=ec2-user,docker
    notify: restart docker
